{"version":3,"sources":["src/hooks/useTourGuideController.tsx","App.tsx","src/components/style.ts","src/index.ts","src/components/TourGuideContext.ts","src/components/ConnectedStep.tsx","src/components/Step.tsx","src/components/Wrapper.tsx","src/components/TourGuideZone.tsx","src/components/TourGuideZoneByPosition.tsx","src/components/Button.tsx","src/components/Tooltip.tsx","src/utilities.ts","src/components/AnimatedPath.web.tsx","src/components/SvgMask.tsx","src/components/Modal.tsx","src/components/TourGuideProvider.tsx","src/hooks/useIsMounted.ts"],"names":["useTourGuideController","tourKey","React","TourGuideContext","start","canStart","stop","eventEmitter","getCurrentStep","setTourKey","key","_eventEmitter","undefined","_canStart","KeyedTourGuideZone","children","rest","KeyedTourGuideZoneByPosition","props","fromStep","TourGuideZone","TourGuideZoneByPosition","AppContent","iconProps","size","color","on","console","log","off","style","styles","container","keepTooltipPosition","zone","text","borderRadius","title","middleView","button","onPress","buttonText","shape","source","uri","profilePhoto","row","tooltipBottomOffset","name","StyleSheet","absoluteFillObject","top","left","width","height","backgroundColor","Platform","OS","isTourGuide","handleFunction","create","flex","alignItems","paddingTop","fontSize","textAlign","marginVertical","paddingVertical","paddingHorizontal","margin","padding","flexDirection","justifyContent","activeSwitchContainer","marginBottom","App","androidStatusBarVisible","MARGIN","OFFSET_WIDTH","position","right","bottom","zIndex","tooltip","overflow","paddingBottom","Z_INDEX","nonInteractionPlaceholder","tooltipText","tooltipContainer","bottomBar","marginTop","overlayContainer","_default","ConnectedStep","this","active","register","prevProps","unregister","obj","wrapper","setNativeProps","context","registerStep","target","warn","unregisterStep","__TEST__","Promise","resolve","x","y","reject","requestAnimationFrame","measure","_ox","_oy","copilot","ref","onLayout","defaultProps","Step","Wrapper","View","maskOffset","tooltipLeftOffset","borderRadiusObject","order","containerStyle","pointerEvents","Button","wrapperStyle","Text","testID","Tooltip","isFirstStep","isLastStep","handleNext","handlePrev","handleStop","currentStep","labels","TouchableOpacity","skip","previous","finish","next","getPrevStep","steps","step","Object","values","filter","_step","reduce","a","b","getNextStep","headPath","cleanPath","memoize","path","replace","trim","getCanvasPath","canvasPath","match","getBorderRadiusOrDefault","defaultRadius","defaultSvgPath","radius","borderRadiusTopRight","topRight","borderRadiusTopLeft","topLeft","borderRadiusBottomRight","bottomRight","borderRadiusBottomLeft","bottomLeft","circleSvgPath","Math","round","max","join","sizeOffset","positionOffset","getMaxSegmentLength","getSplitPathSliceOne","splitPath","splitPathString","length","slice","getInterpolator","previousPath","options","maxSegmentLength","optionsKeep","single","getDefaultInterpolate","interpolate","getCircleInterpolator","toCircle","separate","AnimatedSvgPath","Path","IS_WEB","SvgMask","mask","createRef","windowDimensions","getPath","state","animation","to","interpolator","clamp","_value","svgMaskPathMorph","animationListener","d","rafID","current","_touchableNode","setAttribute","animate","animations","Animated","timing","toValue","duration","animationDuration","easing","useNativeDriver","opacity","push","parallel","stopTogether","result","finished","setState","setValue","handleLayout","nativeEvent","layout","canvasSize","select","android","Dimensions","get","default","firstPath","Value","listenerID","addListener","removeListener","cancelAnimationFrame","dismissOnPress","TouchableWithoutFeedback","fill","backdropColor","strokeWidth","fillRule","elevation","error","Component","Easing","linear","Modal","containerVisible","tooltipTranslateY","handleLayoutChange","prev","reset","renderMask","visible","setLayout","StatusBar","currentHeight","center","relativeToLeft","relativeToTop","relativeToBottom","abs","relativeToRight","horizontalPosition","maxWidth","verticalPosition","translateAnim","delay","opacityAnim","floor","_animateMove","then","TooltipComponent","tooltipComponent","tooltipStyle","transform","translateY","preventOutsideInteraction","absoluteFill","contentVisible","renderNonInteractionPlaceholder","renderTooltip","elastic","isHorizontal","useMemo","useEffect","useState","useRef","TourGuideProvider","verticalOffset","startAtMount","updateVisible","setVisible","value","newVisible","updateCurrentStep","setSteps","setCanStart","startTries","mounted","isMounted","useIsMounted","mitt","modal","emit","moveToCurrentStep","Array","isArray","entries","newObj","async","isNaN","animateMove","setCurrentStep","newStep","getFirstStep","utils","getLastStep","keys","forEach","_next","_prev","Provider","previousSteps","newSteps","stepName","val"],"mappings":"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","file":"static/js/app.be3b528e.chunk.js","sourcesContent":["import * as React from 'react'\nimport { TourGuideContext } from '../components/TourGuideContext'\nimport { TourGuideZone, TourGuideZoneProps } from '../components/TourGuideZone'\nimport {\n  TourGuideZoneByPosition,\n  TourGuideZoneByPositionProps,\n} from '../components/TourGuideZoneByPosition'\n\nexport const useTourGuideController = (tourKey?: string) => {\n  const { start, canStart, stop, eventEmitter, getCurrentStep, setTourKey } =\n    React.useContext(TourGuideContext)\n\n  const key = tourKey ?? '_default'\n\n  const _start = (fromStep?: number) => {\n    if (setTourKey) {\n      setTourKey(key)\n    }\n    if (start) {\n      start(key, fromStep)\n    }\n  }\n  const _stop = () => {\n    if (stop) {\n      stop(key)\n    }\n  }\n  const _eventEmitter = eventEmitter ? eventEmitter[key] : undefined\n  const _canStart = canStart ? canStart[key] : undefined\n  const _getCurrentStep = () => {\n    if (getCurrentStep) {\n      return getCurrentStep(key)\n    }\n    return undefined\n  }\n\n  React.useEffect(() => {\n    if (setTourKey) {\n      setTourKey(key)\n    }\n  }, [])\n\n  const KeyedTourGuideZone: React.FC<Omit<TourGuideZoneProps, 'tourKey'>> =\n    React.useCallback(\n      ({ children, ...rest }) => {\n        return (\n          <TourGuideZone {...rest} tourKey={key}>\n            {children}\n          </TourGuideZone>\n        )\n      },\n      [key],\n    )\n  const KeyedTourGuideZoneByPosition: React.FC<\n    Omit<TourGuideZoneByPositionProps, 'tourKey'>\n  > = React.useCallback(\n    (props) => {\n      return <TourGuideZoneByPosition {...props} tourKey={key} />\n    },\n    [key],\n  )\n\n  return {\n    start: _start,\n    stop: _stop,\n    eventEmitter: _eventEmitter,\n    getCurrentStep: _getCurrentStep,\n    canStart: _canStart,\n    tourKey: key,\n    TourGuideZone: KeyedTourGuideZone,\n    TourGuideZoneByPosition: KeyedTourGuideZoneByPosition,\n  }\n}\n","import { Ionicons } from '@expo/vector-icons'\nimport * as React from 'react'\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native'\nimport {\n  TourGuideProvider,\n  TourGuideZone,\n  TourGuideZoneByPosition,\n  useTourGuideController,\n} from './src'\n\nconst uri =\n  'https://pbs.twimg.com/profile_images/1223192265969016833/U8AX9Lfn_400x400.jpg'\n\n// Add <TourGuideProvider/> at the root of you app!\nfunction App() {\n  return (\n    <TourGuideProvider {...{ borderRadius: 16, androidStatusBarVisible: true }}>\n      <AppContent />\n    </TourGuideProvider>\n  )\n}\n\nconst AppContent = () => {\n  const iconProps = { size: 40, color: '#888' }\n\n  // Use Hooks to control!\n  const { start, canStart, stop, eventEmitter } = useTourGuideController()\n\n  React.useEffect(() => {\n    // start at mount\n    if (canStart) {\n      start()\n    }\n  }, [canStart]) // wait until everything is registered\n\n  React.useEffect(() => {\n    eventEmitter.on('start', () => console.log('start'))\n    eventEmitter.on('stop', () => console.log('stop'))\n    eventEmitter.on('stepChange', () => console.log(`stepChange`))\n    return () => eventEmitter.off('*', null)\n  }, [])\n  return (\n    <View style={styles.container}>\n      {/* Use TourGuideZone only to wrap */}\n      <TourGuideZone\n        keepTooltipPosition\n        zone={2}\n        text={'A react-native-copilot remastered! 🎉'}\n        borderRadius={16}\n      >\n        <Text style={styles.title}>\n          {'Welcome to the demo of\\n\"rn-tourguide\"'}\n        </Text>\n      </TourGuideZone>\n      <View style={styles.middleView}>\n        <TouchableOpacity style={styles.button} onPress={() => start()}>\n          <Text style={styles.buttonText}>START THE TUTORIAL!</Text>\n        </TouchableOpacity>\n\n        <TourGuideZone zone={3} shape={'rectangle_and_keep'}>\n          <TouchableOpacity style={styles.button} onPress={() => start(4)}>\n            <Text style={styles.buttonText}>Step 4</Text>\n          </TouchableOpacity>\n        </TourGuideZone>\n        <TouchableOpacity style={styles.button} onPress={() => start(2)}>\n          <Text style={styles.buttonText}>Step 2</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={stop}>\n          <Text style={styles.buttonText}>Stop</Text>\n        </TouchableOpacity>\n        <TourGuideZone\n          zone={7}\n          shape='circle'\n          text={'With animated SVG morphing with awesome flubber 🍮💯'}\n        >\n          <Image source={{ uri }} style={styles.profilePhoto} />\n        </TourGuideZone>\n      </View>\n      <View style={styles.row}>\n        <TourGuideZone zone={4} shape={'circle'} tooltipBottomOffset={200}>\n          <Ionicons name='ios-add-circle' {...iconProps} />\n        </TourGuideZone>\n        <Ionicons name='ios-chatbubbles' {...iconProps} />\n        <Ionicons name='ios-globe' {...iconProps} />\n        <TourGuideZone zone={5}>\n          <Ionicons name='ios-navigate' {...iconProps} />\n        </TourGuideZone>\n        <TourGuideZone zone={6} shape={'circle'}>\n          <Ionicons name='ios-rainy' {...iconProps} />\n        </TourGuideZone>\n      </View>\n      <View\n        style={[\n          StyleSheet.absoluteFillObject,\n          {\n            top: 250,\n            left: 50,\n            width: 64,\n            height: 64,\n            backgroundColor: 'red',\n          },\n        ]}\n      />\n      {Platform.OS !== 'web' ? (\n        <TourGuideZoneByPosition\n          zone={1}\n          shape={'circle'}\n          isTourGuide\n          top={250}\n          left={50}\n          width={64}\n          height={64}\n          tooltipBottomOffset={200}\n          handleFunction={() => console.log('handleFunction')}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  profilePhoto: {\n    width: 140,\n    height: 140,\n    borderRadius: 70,\n    marginVertical: 20,\n  },\n  middleView: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#2980b9',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n  row: {\n    width: '100%',\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  activeSwitchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n})\n\nexport default App\n","import { StyleSheet, ViewStyle, TextStyle } from 'react-native'\n\nexport const Z_INDEX: number = 100\nexport const MARGIN: number = 13\nexport const OFFSET_WIDTH: number = 4\n\nexport interface IStyle {\n  container: ViewStyle\n  tooltip: ViewStyle\n  tooltipText: TextStyle\n  tooltipContainer: ViewStyle\n  button: ViewStyle\n  buttonText: TextStyle\n  bottomBar: ViewStyle\n  overlayContainer: ViewStyle\n  nonInteractionPlaceholder: ViewStyle\n}\n\nexport default StyleSheet.create<IStyle>({\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: Z_INDEX,\n  },\n  tooltip: {\n    position: 'absolute',\n    paddingHorizontal: 15,\n    overflow: 'hidden',\n    width: '100%',\n    borderRadius: 16,\n    paddingTop: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16,\n    zIndex: Z_INDEX - 1,\n  },\n  nonInteractionPlaceholder: {\n    backgroundColor: 'transparent',\n    zIndex: Z_INDEX - 2,\n  },\n  tooltipText: {\n    textAlign: 'center',\n  },\n  tooltipContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '80%',\n  },\n  button: {\n    padding: 10,\n  },\n  buttonText: {\n    color: '#27ae60',\n  },\n  bottomBar: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  overlayContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n})\n","export { TourGuideZone, TourGuideZoneProps } from './components/TourGuideZone'\nexport { TourGuideProvider, TourGuideProviderProps } from './components/TourGuideProvider'\nexport { TourGuideContext, ITourGuideContext } from './components/TourGuideContext'\nexport { Tooltip, TooltipProps } from './components/Tooltip'\nexport { TourGuideZoneByPosition, TourGuideZoneByPositionProps } from './components/TourGuideZoneByPosition'\nexport { useTourGuideController } from './hooks/useTourGuideController'\nexport * from './types'\n","import * as React from 'react'\nimport { IStep } from '../types'\n\nexport type Handler = (event?: any) => void\nexport interface Emitter {\n  on(type: string, handler: Handler): void\n  off(type: string, handler: Handler): void\n  emit(type: string, event?: any): void\n}\nexport type Ctx<T extends any> = Record<string, T> & { _default: T }\n\nexport interface ITourGuideContext {\n  setTourKey?: (tourKey: string) => void\n  eventEmitter?: Ctx<Emitter>\n  canStart: Ctx<boolean>\n  registerStep?(key: string, step: IStep): void\n  unregisterStep?(key: string, stepName: string): void\n  getCurrentStep?(key: string): IStep | undefined\n  start?(key: string, fromStep?: number): void\n  stop?(key: string): void\n}\n\nexport const TourGuideContext = React.createContext<ITourGuideContext>({\n  canStart: { _default: false },\n})\n","import * as React from 'react'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { ITourGuideContext } from './TourGuideContext'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  name: string\n  text: string\n  order: number\n  tourKey: string\n  active?: boolean\n  shape?: Shape\n  context: ITourGuideContext\n  children?: any\n  maskOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n  borderRadius?: number\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n}\n\nexport class ConnectedStep extends React.Component<Props> {\n  static defaultProps = {\n    active: true,\n  }\n  wrapper: any\n  componentDidMount() {\n    if (this.props.active) {\n      this.register()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      if (this.props.active) {\n        this.register()\n      } else {\n        this.unregister()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unregister()\n  }\n\n  setNativeProps(obj: any) {\n    this.wrapper.setNativeProps(obj)\n  }\n\n  register() {\n    if (this.props.context && this.props.context.registerStep) {\n      this.props.context.registerStep(this.props.tourKey, {\n        target: this,\n        wrapper: this.wrapper,\n        ...this.props,\n      })\n    } else {\n      console.warn('context undefined')\n    }\n  }\n\n  unregister() {\n    if (this.props.context && this.props.context.unregisterStep) {\n      this.props.context.unregisterStep(this.props.tourKey, this.props.name)\n    } else {\n      console.warn('unregisterStep undefined')\n    }\n  }\n\n  measure() {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve, reject) => {\n      const measure = () => {\n        // Wait until the wrapper element appears\n        if (this.wrapper && this.wrapper.measure) {\n          const { borderRadius } = this.props\n          this.wrapper.measure(\n            (\n              _ox: number,\n              _oy: number,\n              width: number,\n              height: number,\n              x: number,\n              y: number,\n            ) =>\n              resolve({\n                x: borderRadius ? x + borderRadius : x,\n                y,\n                width: borderRadius ? width - borderRadius * 2 : width,\n                height,\n              }),\n            reject,\n          )\n        } else {\n          requestAnimationFrame(measure)\n        }\n      }\n\n      requestAnimationFrame(measure)\n    })\n  }\n\n  render() {\n    const copilot = {\n      ref: (wrapper: any) => {\n        this.wrapper = wrapper\n      },\n      onLayout: () => { }, // Android hack\n    }\n\n    return React.cloneElement(this.props.children, { copilot })\n  }\n}\n","import * as React from 'react'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { ConnectedStep } from './ConnectedStep'\nimport { TourGuideContext } from './TourGuideContext'\n\ninterface Props {\n  name: string\n  order: number\n  text: string\n  tourKey: string\n  shape?: Shape\n  active?: boolean\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  tooltipLeftOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n  handleFunction?: () => void\n}\n\nexport const Step = (props: Props) => {\n  const context = React.useContext(TourGuideContext)\n  return <ConnectedStep {...{ ...props, context }} />\n}\n","import * as React from 'react'\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\ninterface WrapperProps {\n  copilot?: any\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n}\nexport const Wrapper = ({ copilot, children, style }: WrapperProps) => (\n  <View style={style} {...copilot}>\n    {children}\n  </View>\n)\n","import * as React from 'react'\nimport { StyleProp, ViewStyle } from 'react-native'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { Step } from './Step'\nimport { Wrapper } from './Wrapper'\n\nexport interface TourGuideZoneProps {\n  zone: number\n  tourKey?: string\n  isTourGuide?: boolean\n  text?: string\n  shape?: Shape\n  maskOffset?: number\n  borderRadius?: number\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  tooltipLeftOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n  handleFunction?: () => void\n}\n\nexport const TourGuideZone = ({\n  isTourGuide = true,\n  tourKey = '_default',\n  zone,\n  children,\n  shape,\n  text,\n  maskOffset,\n  borderRadius,\n  style,\n  keepTooltipPosition,\n  tooltipBottomOffset,\n  tooltipLeftOffset,\n  borderRadiusObject,\n  handleFunction\n}: TourGuideZoneProps) => {\n  if (!isTourGuide) {\n    return <>{children}</>\n  }\n\n  return (\n    <Step\n      text={text ?? `Zone ${zone}`}\n      order={zone}\n      name={`${zone}`}\n      {...{\n        tourKey,\n        shape,\n        maskOffset,\n        borderRadius,\n        keepTooltipPosition,\n        tooltipBottomOffset,\n        tooltipLeftOffset,\n        borderRadiusObject,\n        handleFunction\n      }}\n    >\n      <Wrapper {...{ style }}>{children}</Wrapper>\n    </Step>\n  )\n}\n","import * as React from 'react'\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { TourGuideZone } from './TourGuideZone'\n\nexport interface TourGuideZoneByPositionProps {\n  zone: number\n  tourKey?: string\n  isTourGuide?: boolean\n  top?: number | string\n  left?: number | string\n  right?: number | string\n  bottom?: number | string\n  width?: number | string\n  height?: number | string\n  shape?: Shape\n  borderRadiusObject?: BorderRadiusObject\n  containerStyle?: StyleProp<ViewStyle>\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  text?: string\n  handleFunction?: () => void\n}\n\nexport const TourGuideZoneByPosition = ({\n  isTourGuide,\n  zone,\n  tourKey = '_default',\n  width,\n  height,\n  top,\n  left,\n  right,\n  bottom,\n  shape,\n  containerStyle,\n  keepTooltipPosition,\n  tooltipBottomOffset,\n  borderRadiusObject,\n  text,\n  handleFunction\n}: TourGuideZoneByPositionProps) => {\n  if (!isTourGuide) {\n    return null\n  }\n\n  return (\n    <View\n      pointerEvents='none'\n      style={[StyleSheet.absoluteFillObject, containerStyle]}\n    >\n      <TourGuideZone\n        isTourGuide\n        {...{\n          tourKey,\n          zone,\n          shape,\n          keepTooltipPosition,\n          tooltipBottomOffset,\n          borderRadiusObject,\n          text,\n          handleFunction\n        }}\n        style={{\n          position: 'absolute',\n          height,\n          width,\n          top,\n          right,\n          bottom,\n          left,\n        }}\n      />\n    </View>\n  )\n}\n","import * as React from 'react'\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\n\nimport styles from './style'\n\ninterface Props {\n  wrapperStyle?: StyleProp<ViewStyle>\n  style?: StyleProp<ViewStyle>\n  children?: any\n}\n\nexport const Button = ({ wrapperStyle, style, children, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} testID={'TourGuideButtonText'} {...rest}>\n      {children}\n    </Text>\n  </View>\n)\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\nimport { Button } from './Button'\nimport styles from './style'\nimport { IStep, Labels } from '../types'\n\nexport interface TooltipProps {\n  isFirstStep?: boolean\n  isLastStep?: boolean\n  currentStep: IStep\n  labels?: Labels\n  handleNext?: () => void\n  handlePrev?: () => void\n  handleStop?: () => void\n}\n\nexport const Tooltip = ({\n  isFirstStep,\n  isLastStep,\n  handleNext,\n  handlePrev,\n  handleStop,\n  currentStep,\n  labels,\n}: TooltipProps) => (\n  <View\n    style={{\n      borderRadius: 16,\n      paddingTop: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingBottom: 16,\n      width: '80%',\n      backgroundColor: '#ffffffef',\n    }}\n  >\n    <View style={styles.tooltipContainer}>\n      <Text testID='stepDescription' style={styles.tooltipText}>\n        {currentStep && currentStep.text}\n      </Text>\n    </View>\n    <View style={[styles.bottomBar]}>\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.skip || 'Skip'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isFirstStep ? (\n        <TouchableOpacity onPress={handlePrev}>\n          <Button>{labels?.previous || 'Previous'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleNext}>\n          <Button>{labels?.next || 'Next'}</Button>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.finish || 'Finish'}</Button>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n)\n","// @ts-ignore\nimport { interpolate, separate, splitPathString, toCircle } from 'flubber'\nimport clamp from 'lodash.clamp'\nimport memoize from 'memoize-one'\nimport {\n  BorderRadiusObject,\n  IStep,\n  Shape,\n  Steps,\n  SVGMaskPathMorphParam,\n  SvgPath,\n  ValueXY,\n} from './types'\n\nexport const getFirstStep = (steps: Steps): IStep | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: IStep | null, b) => (!a || a.order > b.order ? b : a),\n    null,\n  )\n\nexport const getLastStep = (steps: Steps): IStep | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: IStep | null, b) => (!a || a.order < b.order ? b : a),\n    null,\n  )\n\nexport const getStepNumber = (steps: Steps, step?: IStep): number | undefined =>\n  step &&\n  Object.values(steps).filter((_step) => _step.order <= step.order).length\n\nexport const getPrevStep = (steps: Steps, step?: IStep): IStep | null =>\n  Object.values(steps)\n    .filter((_step) => _step.order < step!.order)\n    .reduce((a: IStep | null, b) => (!a || a.order < b.order ? b : a), null)\n\nexport const getNextStep = (\n  steps: Steps,\n  step?: IStep,\n): IStep | null | undefined =>\n  Object.values(steps)\n    .filter((_step) => _step.order > step!.order)\n    .reduce((a: IStep | null, b) => (!a || a.order > b.order ? b : a), null) ||\n  step\n\nconst headPath = /^M0,0H\\d*\\.?\\d*V\\d*\\.?\\d*H0V0Z/\nconst cleanPath = memoize((path: string) => path.replace(headPath, '').trim())\nconst getCanvasPath = memoize((path: string) => {\n  const canvasPath = path.match(headPath)\n  if (canvasPath) {\n    return canvasPath[0]\n  }\n  return ''\n})\n\nconst getBorderRadiusOrDefault = (\n  borderRadius?: number,\n  defaultRadius: number = 0,\n) => (borderRadius || borderRadius === 0 ? borderRadius : defaultRadius)\n\nexport const defaultSvgPath = ({\n  size,\n  position,\n  borderRadius: radius,\n  borderRadiusObject,\n}: {\n  size: ValueXY\n  position: ValueXY\n  borderRadius: number\n  borderRadiusObject?: BorderRadiusObject\n}): SvgPath => {\n  if (radius || borderRadiusObject) {\n    const borderRadiusTopRight = getBorderRadiusOrDefault(\n      borderRadiusObject?.topRight,\n      radius,\n    )\n    const borderRadiusTopLeft = getBorderRadiusOrDefault(\n      borderRadiusObject?.topLeft,\n      radius,\n    )\n    const borderRadiusBottomRight = getBorderRadiusOrDefault(\n      borderRadiusObject?.bottomRight,\n      radius,\n    )\n    const borderRadiusBottomLeft = getBorderRadiusOrDefault(\n      borderRadiusObject?.bottomLeft,\n      radius,\n    )\n\n    return `M${position.x},${position.y}H${\n      position.x + size.x\n    } a${borderRadiusTopRight},${borderRadiusTopRight} 0 0 1 ${borderRadiusTopRight},${borderRadiusTopRight}V${\n      position.y + size.y - borderRadiusTopRight\n    } a${borderRadiusBottomRight},${borderRadiusBottomRight} 0 0 1 -${borderRadiusBottomRight},${borderRadiusBottomRight}H${\n      position.x\n    } a${borderRadiusBottomLeft},${borderRadiusBottomLeft} 0 0 1 -${borderRadiusBottomLeft},-${borderRadiusBottomLeft}V${\n      position.y +\n      (borderRadiusBottomLeft > borderRadiusTopLeft\n        ? borderRadiusTopLeft\n        : borderRadiusBottomLeft)\n    } a${borderRadiusTopLeft},${borderRadiusTopLeft} 0 0 1 ${borderRadiusTopLeft},-${borderRadiusTopLeft}Z`\n  }\n  return `M${position.x},${position.y}H${position.x + size.x}V${\n    position.y + size.y\n  }H${position.x}V${position.y}Z`\n}\n\nexport const circleSvgPath = ({\n  size,\n  position,\n}: {\n  size: ValueXY\n  position: ValueXY\n}): SvgPath => {\n  const radius = Math.round(Math.max(size.x, size.y) / 2)\n  return [\n    `M${position.x - size.x / 8},${position.y + size.y / 2}`,\n    `a${radius} ${radius} 0 1 0 ${radius * 2} 0 ${radius} ${radius} 0 1 0-${\n      radius * 2\n    } 0`,\n  ].join('')\n}\n\nconst sizeOffset = memoize((size: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: size.x + maskOffset,\n        y: size.y + maskOffset,\n      }\n    : size,\n)\n\nconst positionOffset = memoize((position: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: position.x - maskOffset / 2,\n        y: position.y - maskOffset / 2,\n      }\n    : position,\n)\n\nconst getMaxSegmentLength = memoize((shape: Shape) => {\n  switch (shape) {\n    case 'circle':\n    case 'circle_and_keep':\n      return 7\n    case 'rectangle_and_keep':\n      return 25\n\n    default:\n      return 15\n  }\n})\n\nconst getSplitPathSliceOne = memoize((path: SvgPath) => {\n  const splitPath = splitPathString(path)\n  return splitPath.length > 1 ? splitPath.slice(1).join('') : path\n})\n\nconst getInterpolator = memoize(\n  (\n    previousPath: string,\n    shape: Shape,\n    position: ValueXY,\n    size: ValueXY,\n    maskOffset: number = 0,\n    borderRadius: number = 0,\n    borderRadiusObject?: BorderRadiusObject,\n  ) => {\n    const options = {\n      maxSegmentLength: getMaxSegmentLength(shape),\n    }\n    const optionsKeep = { single: true }\n    const getDefaultInterpolate = () =>\n      interpolate(\n        previousPath,\n        defaultSvgPath({\n          size: sizeOffset(size, maskOffset),\n          position: positionOffset(position, maskOffset),\n          borderRadius,\n          borderRadiusObject,\n        }),\n        options,\n      )\n    const getCircleInterpolator = () =>\n      toCircle(\n        previousPath,\n        position.x + size.x / 2,\n        position.y + size.y / 2,\n        Math.max(size.x, size.y) / 2 + maskOffset,\n        options,\n      )\n\n    switch (shape) {\n      case 'circle':\n        return getCircleInterpolator()\n      case 'rectangle':\n        return getDefaultInterpolate()\n      case 'circle_and_keep': {\n        const path = getSplitPathSliceOne(previousPath)\n        return separate(\n          previousPath,\n          [\n            path,\n            circleSvgPath({ size: sizeOffset(size, maskOffset), position }),\n          ],\n          optionsKeep,\n        )\n      }\n\n      case 'rectangle_and_keep': {\n        const path = getSplitPathSliceOne(previousPath)\n        return separate(\n          previousPath,\n          [\n            path,\n            defaultSvgPath({\n              size: sizeOffset(size, maskOffset),\n              position: positionOffset(position, maskOffset),\n              borderRadius,\n              borderRadiusObject,\n            }),\n          ],\n          optionsKeep,\n        )\n      }\n      default:\n        return getDefaultInterpolate()\n    }\n  },\n)\n\nexport const svgMaskPathMorph = ({\n  previousPath,\n  animation,\n  to: { position, size, shape, maskOffset, borderRadius, borderRadiusObject },\n}: SVGMaskPathMorphParam) => {\n  const interpolator = getInterpolator(\n    cleanPath(previousPath),\n    shape!,\n    position,\n    size,\n    maskOffset,\n    borderRadius,\n    borderRadiusObject,\n  )\n\n  return `${getCanvasPath(previousPath)}${interpolator(\n    clamp(animation._value, 0, 1),\n  )}`\n}\n","import { Path } from 'react-native-svg'\n\nexport const AnimatedSvgPath = Path\n","import React, { Component } from 'react'\nimport {\n  Animated,\n  Dimensions,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  TouchableWithoutFeedback,\n  ScaledSize,\n  TouchableOpacity,\n} from 'react-native'\nimport Svg, { PathProps } from 'react-native-svg'\nimport { IStep, ValueXY } from '../types'\nimport { svgMaskPathMorph } from '../utilities'\nimport { AnimatedSvgPath } from './AnimatedPath'\n\ninterface Props {\n  size: ValueXY\n  position: ValueXY\n  style: StyleProp<ViewStyle>\n  animationDuration?: number\n  backdropColor: string\n  dismissOnPress?: boolean\n  maskOffset?: number\n  borderRadius?: number\n  currentStep?: IStep\n  easing: (value: number) => number\n  stop: () => void\n  handleFunction: () => void\n}\n\ninterface State {\n  size: ValueXY\n  position: ValueXY\n  opacity: Animated.Value\n  animation: Animated.Value\n  canvasSize: ValueXY\n  previousPath: string\n}\n\nconst IS_WEB = Platform.OS !== 'web'\n\nexport class SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.linear,\n    size: { x: 0, y: 0 },\n    position: { x: 0, y: 0 },\n    maskOffset: 0,\n  }\n\n  listenerID: string\n  rafID: number\n  mask: React.RefObject<PathProps> = React.createRef()\n\n  windowDimensions: ScaledSize | null = null\n  firstPath: string | undefined\n\n  constructor(props: Props) {\n    super(props)\n\n    this.windowDimensions = Platform.select({\n      android: Dimensions.get('screen'),\n      default: Dimensions.get('window'),\n    })\n\n    this.firstPath = `M0,0H${this.windowDimensions.width}V${this.windowDimensions.height\n      }H0V0ZM${this.windowDimensions.width / 2},${this.windowDimensions.height / 2\n      } h 1 v 1 h -1 Z`\n\n    this.state = {\n      canvasSize: {\n        x: this.windowDimensions.width,\n        y: this.windowDimensions.height,\n      },\n      size: props.size,\n      position: props.position,\n      opacity: new Animated.Value(0),\n      animation: new Animated.Value(0),\n      previousPath: this.firstPath,\n    }\n\n    this.listenerID = this.state.animation.addListener(this.animationListener)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.position !== this.props.position ||\n      prevProps.size !== this.props.size\n    ) {\n      this.animate()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenerID) {\n      this.state.animation.removeListener(this.listenerID)\n    }\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID)\n    }\n  }\n\n  getPath = () => {\n    const { previousPath, animation } = this.state\n    const { size, position, currentStep, maskOffset, borderRadius } = this.props\n\n    return svgMaskPathMorph({\n      animation: animation as any,\n      previousPath,\n      to: {\n        position,\n        size,\n        shape: currentStep?.shape,\n        maskOffset: currentStep?.maskOffset || maskOffset,\n        borderRadius: currentStep?.borderRadius || borderRadius,\n        borderRadiusObject: currentStep?.borderRadiusObject,\n      },\n    })\n  }\n\n  animationListener = () => {\n    const d = this.getPath()\n    this.rafID = requestAnimationFrame(() => {\n      if (this.mask && this.mask.current) {\n        if (IS_WEB) {\n          // @ts-ignore\n          this.mask.current.setNativeProps({ d })\n        } else {\n          // @ts-ignore\n          this.mask.current._touchableNode.setAttribute('d', d)\n        }\n      }\n    })\n  }\n\n  animate = () => {\n    const animations = [\n      Animated.timing(this.state.animation, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: false,\n      }),\n    ]\n    // @ts-ignore\n    if (this.state.opacity._value !== 1) {\n      animations.push(\n        Animated.timing(this.state.opacity, {\n          toValue: 1,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: true,\n        }),\n      )\n    }\n    Animated.parallel(animations, { stopTogether: false }).start((result) => {\n      if (result.finished) {\n        this.setState({ previousPath: this.getPath() }, () => {\n          // @ts-ignore\n          if (this.state.animation._value === 1) {\n            this.state.animation.setValue(0)\n          }\n        })\n      }\n    })\n  }\n\n  handleLayout = ({\n    nativeEvent: {\n      layout: { width, height },\n    },\n  }: LayoutChangeEvent) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    })\n  }\n\n  render() {\n    if (!this.state.canvasSize) {\n      return null\n    }\n    const { dismissOnPress, stop } = this.props\n    const Wrapper: any = dismissOnPress ? TouchableWithoutFeedback : View\n\n    return (\n      <Wrapper\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        // pointerEvents='none'\n        onPress={dismissOnPress ? stop : undefined}\n      >\n\n        <Svg\n          pointerEvents='none'\n          width={this.state.canvasSize.x}\n          height={this.state.canvasSize.y}\n        >\n          <AnimatedSvgPath\n            ref={this.mask}\n            fill={this.props.backdropColor}\n            strokeWidth={0}\n            fillRule='evenodd'\n            d={this.firstPath}\n            opacity={this.state.opacity as any}\n          />\n        </Svg>\n\n        <TouchableOpacity style={{ position: 'absolute', top: this.props.position.y, left: this.props.position.x, width: this.props.size.x, height: this.props.size.y, backgroundColor: 'transparent', zIndex: 999, elevation: 3 }} onPress={() => {\n          try {\n            this.props.handleFunction();\n          } catch (error) { }\n        }}></TouchableOpacity>\n      </Wrapper>\n    )\n  }\n}\n","import * as React from 'react'\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StatusBar,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native'\nimport { BorderRadiusObject, IStep, Labels, ValueXY } from '../types'\nimport styles, { MARGIN } from './style'\nimport { SvgMask } from './SvgMask'\nimport { Tooltip, TooltipProps } from './Tooltip'\n\ndeclare var __TEST__: boolean\n\nexport interface ModalProps {\n  ref: any\n  currentStep?: IStep\n  visible?: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  animationDuration?: number\n  tooltipComponent: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  borderRadiusObject?: BorderRadiusObject\n  androidStatusBarVisible: boolean\n  backdropColor: string\n  labels: Labels\n  dismissOnPress?: boolean\n  easing: (value: number) => number\n  stop: () => void\n  next: () => void\n  prev: () => void\n  preventOutsideInteraction?: boolean\n}\n\ninterface Layout {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\ninterface State {\n  tooltip: object\n  notAnimated?: boolean\n  containerVisible: boolean\n  layout?: Layout\n  size?: ValueXY\n  position?: ValueXY\n  tooltipTranslateY: Animated.Value\n  opacity: Animated.Value\n}\n\ninterface Move {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nexport class Modal extends React.Component<ModalProps, State> {\n  static defaultProps = {\n    easing: Easing.elastic(0.7),\n    animationDuration: 400,\n    tooltipComponent: Tooltip as any,\n    tooltipStyle: {},\n    androidStatusBarVisible: false,\n    backdropColor: 'rgba(0, 0, 0, 0.4)',\n    labels: {},\n    isHorizontal: false,\n    preventOutsideInteraction: false,\n  }\n\n  layout?: Layout = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  state = {\n    tooltip: {},\n    containerVisible: false,\n    tooltipTranslateY: new Animated.Value(400),\n    opacity: new Animated.Value(0),\n    layout: undefined,\n    size: undefined,\n    position: undefined,\n  }\n\n  constructor(props: ModalProps) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps: ModalProps) {\n    if (prevProps.visible === true && this.props.visible === false) {\n      this.reset()\n    }\n  }\n\n  handleLayoutChange = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    this.layout = layout\n  }\n\n  measure(): Promise<Layout> {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve) => {\n      const setLayout = () => {\n        if (this.layout && this.layout.width !== 0) {\n          resolve(this.layout)\n        } else {\n          requestAnimationFrame(setLayout)\n        }\n      }\n      setLayout()\n    })\n  }\n\n  async _animateMove(\n    obj: Move = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n  ) {\n    const layout = await this.measure()\n    if (!this.props.androidStatusBarVisible && Platform.OS === 'android') {\n      obj.top -= StatusBar.currentHeight || 30\n    }\n\n    const center = {\n      x: obj.left! + obj.width! / 2,\n      y: obj.top! + obj.height! / 2,\n    }\n\n    const relativeToLeft = center.x\n    const relativeToTop = center.y\n    const relativeToBottom = Math.abs(center.y - layout.height!)\n    const relativeToRight = Math.abs(center.x - layout.width!)\n\n    const verticalPosition = relativeToBottom > relativeToTop ? 'bottom' : 'top'\n    const horizontalPosition =\n      relativeToLeft > relativeToRight ? 'left' : 'right'\n\n    const tooltip = {\n      top: 0,\n      tooltip: 0,\n      bottom: 0,\n      right: 0,\n      maxWidth: 0,\n      left: 0,\n    }\n\n    if (verticalPosition === 'bottom') {\n      tooltip.top = obj.top + obj.height + MARGIN\n    } else {\n      tooltip.bottom = layout.height! - (obj.top - MARGIN)\n    }\n\n    if (horizontalPosition === 'left') {\n      tooltip.right = Math.max(layout.width! - (obj.left + obj.width), 0)\n      tooltip.right =\n        tooltip.right === 0 ? tooltip.right + MARGIN : tooltip.right\n      tooltip.maxWidth = layout.width! - tooltip.right - MARGIN\n    } else {\n      tooltip.left = Math.max(obj.left, 0)\n      tooltip.left = tooltip.left === 0 ? tooltip.left + MARGIN : tooltip.left\n      tooltip.maxWidth = layout.width! - tooltip.left - MARGIN\n    }\n\n    const duration = this.props.animationDuration! + 200\n    const toValue =\n      verticalPosition === 'bottom'\n        ? tooltip.top\n        : obj.top -\n        MARGIN -\n        135 -\n        (this.props.currentStep!.tooltipBottomOffset || 0)\n    const translateAnim = Animated.timing(this.state.tooltipTranslateY, {\n      toValue,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    const opacityAnim = Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    this.state.opacity.setValue(0)\n    if (\n      // @ts-ignore\n      toValue !== this.state.tooltipTranslateY._value &&\n      !this.props.currentStep?.keepTooltipPosition\n    ) {\n      Animated.parallel([translateAnim, opacityAnim]).start()\n    } else {\n      opacityAnim.start()\n    }\n\n    this.setState({\n      tooltip,\n      layout,\n      size: {\n        x: obj.width,\n        y: obj.height,\n      },\n      position: {\n        x: Math.floor(Math.max(obj.left, 0)),\n        y: Math.floor(Math.max(obj.top, 0)),\n      },\n    })\n  }\n\n  animateMove(obj = {}): Promise<void> {\n    return new Promise((resolve) => {\n      this.setState({ containerVisible: true }, () =>\n        this._animateMove(obj as any).then(resolve),\n      )\n    })\n  }\n\n  reset() {\n    this.setState({\n      containerVisible: false,\n      layout: undefined,\n    })\n  }\n\n  handleNext = () => {\n    this.props.next()\n  }\n\n  handlePrev = () => {\n    this.props.prev()\n  }\n\n  handleStop = () => {\n    this.reset()\n    this.props.stop()\n  }\n\n  renderMask = () => (\n    <SvgMask\n      style={styles.overlayContainer}\n      size={this.state.size!}\n      position={this.state.position!}\n      easing={this.props.easing}\n      animationDuration={this.props.animationDuration}\n      backdropColor={this.props.backdropColor}\n      currentStep={this.props.currentStep}\n      maskOffset={this.props.maskOffset}\n      borderRadius={this.props.borderRadius}\n      dismissOnPress={this.props.dismissOnPress}\n      stop={this.props.stop}\n      handleFunction={() => this.props.currentStep?.handleFunction?.()}\n    />\n  )\n\n  renderTooltip() {\n    const { tooltipComponent: TooltipComponent, visible } = this.props\n\n    if (!visible) {\n      return null\n    }\n\n    const { opacity } = this.state\n    return (\n      <Animated.View\n        pointerEvents='box-none'\n        key='tooltip'\n        style={[\n          styles.tooltip,\n          this.props.tooltipStyle,\n          {\n            zIndex: 99,\n            opacity,\n            transform: [{ translateY: this.state.tooltipTranslateY }],\n          },\n        ]}\n      >\n        <TooltipComponent\n          isFirstStep={this.props.isFirstStep}\n          isLastStep={this.props.isLastStep}\n          currentStep={this.props.currentStep!}\n          handleNext={this.handleNext}\n          handlePrev={this.handlePrev}\n          handleStop={this.handleStop}\n          labels={this.props.labels}\n        />\n      </Animated.View>\n    )\n  }\n\n  renderNonInteractionPlaceholder() {\n    return this.props.preventOutsideInteraction ? <View\n      style={[StyleSheet.absoluteFill, styles.nonInteractionPlaceholder]} /> : null\n  }\n\n\n  render() {\n    const containerVisible = this.state.containerVisible || this.props.visible\n    const contentVisible = this.state.layout && containerVisible\n    if (!containerVisible) {\n      return null\n    }\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, { backgroundColor: 'transparent' }]}\n        pointerEvents='box-none'\n      >\n        <View\n          style={styles.container}\n          onLayout={this.handleLayoutChange}\n          pointerEvents='box-none'\n        >\n\n\n          {contentVisible && (\n            <>\n              {this.renderMask()}\n              {this.renderNonInteractionPlaceholder()}\n              {this.renderTooltip()}\n            </>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import mitt, { Emitter } from 'mitt'\nimport * as React from 'react'\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native'\nimport { TourGuideContext, Ctx } from './TourGuideContext'\nimport { useIsMounted } from '../hooks/useIsMounted'\nimport { IStep, Labels, StepObject, Steps } from '../types'\nimport * as utils from '../utilities'\nimport { Modal } from './Modal'\nimport { OFFSET_WIDTH } from './style'\nimport { TooltipProps } from './Tooltip'\n\nconst { useMemo, useEffect, useState, useRef } = React\n/*\nThis is the maximum wait time for the steps to be registered before starting the tutorial\nAt 60fps means 2 seconds\n*/\nconst MAX_START_TRIES = 120\n\nexport interface TourGuideProviderProps {\n  tooltipComponent?: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  labels?: Labels\n  androidStatusBarVisible?: boolean\n  startAtMount?: string | boolean\n  backdropColor?: string\n  verticalOffset?: number\n  wrapperStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  animationDuration?: number\n  children: React.ReactNode\n  dismissOnPress?: boolean\n  preventOutsideInteraction?: boolean\n}\n\nexport const TourGuideProvider = ({\n  children,\n  wrapperStyle,\n  labels,\n  tooltipComponent,\n  tooltipStyle,\n  androidStatusBarVisible,\n  backdropColor,\n  animationDuration,\n  maskOffset,\n  borderRadius,\n  verticalOffset,\n  startAtMount = false,\n  dismissOnPress = false,\n  preventOutsideInteraction = false,\n}: TourGuideProviderProps) => {\n  const [tourKey, setTourKey] = useState<string | '_default'>('_default')\n  const [visible, updateVisible] = useState<Ctx<boolean | undefined>>({\n    _default: false,\n  })\n  const setVisible = (key: string, value: boolean) =>\n    updateVisible((visible) => {\n      const newVisible = { ...visible }\n      newVisible[key] = value\n      return newVisible\n    })\n  const [currentStep, updateCurrentStep] = useState<Ctx<IStep | undefined>>({\n    _default: undefined,\n  })\n  const [steps, setSteps] = useState<Ctx<Steps>>({ _default: [] })\n\n  const [canStart, setCanStart] = useState<Ctx<boolean>>({ _default: false })\n\n  const startTries = useRef<number>(0)\n  const { current: mounted } = useIsMounted()\n\n  const { current: eventEmitter } = useRef<Ctx<Emitter>>({\n    _default: new mitt(),\n  })\n\n  const modal = useRef<any>()\n\n  useEffect(() => {\n    if (mounted && visible[tourKey] === false) {\n      eventEmitter[tourKey]?.emit('stop')\n    }\n  }, [visible])\n\n  useEffect(() => {\n    if (visible[tourKey] || currentStep[tourKey]) {\n      moveToCurrentStep(tourKey)\n    }\n  }, [visible, currentStep])\n\n  useEffect(() => {\n    if (mounted) {\n      if (steps[tourKey]) {\n        if (\n          (Array.isArray(steps[tourKey]) && steps[tourKey].length > 0) ||\n          Object.entries(steps[tourKey]).length > 0\n        ) {\n          setCanStart((obj) => {\n            const newObj = { ...obj }\n            newObj[tourKey] = true\n            return newObj\n          })\n          if (typeof startAtMount === 'string') {\n            start(startAtMount)\n          } else if (startAtMount) {\n            start('_default')\n          }\n        } else {\n          setCanStart((obj) => {\n            const newObj = { ...obj }\n            newObj[tourKey] = false\n            return newObj\n          })\n        }\n      }\n    }\n  }, [mounted, steps])\n\n  const moveToCurrentStep = async (key: string) => {\n    const size = await currentStep[key]?.target.measure()\n    if (\n      isNaN(size.width) ||\n      isNaN(size.height) ||\n      isNaN(size.x) ||\n      isNaN(size.y)\n    ) {\n      return\n    }\n    await modal.current?.animateMove({\n      width: size.width + OFFSET_WIDTH,\n      height: size.height + OFFSET_WIDTH,\n      left: Math.round(size.x) - OFFSET_WIDTH / 2,\n      top: Math.round(size.y) - OFFSET_WIDTH / 2 + (verticalOffset || 0),\n    })\n  }\n\n  const setCurrentStep = (key: string, step?: IStep) =>\n    new Promise<void>((resolve) => {\n      updateCurrentStep((currentStep) => {\n        const newStep = { ...currentStep }\n        newStep[key] = step\n        eventEmitter[key]?.emit('stepChange', step)\n        return newStep\n      })\n      resolve()\n    })\n\n  const getNextStep = (\n    key: string,\n    step: IStep | undefined = currentStep[key],\n  ) => utils.getNextStep(steps[key]!, step)\n\n  const getPrevStep = (\n    key: string,\n    step: IStep | undefined = currentStep[key],\n  ) => utils.getPrevStep(steps[key]!, step)\n\n  const getFirstStep = (key: string) => utils.getFirstStep(steps[key]!)\n\n  const getLastStep = (key: string) => utils.getLastStep(steps[key]!)\n\n  const isFirstStep = useMemo(() => {\n    const obj: Ctx<boolean> = {} as Ctx<boolean>\n    Object.keys(currentStep).forEach((key) => {\n      obj[key] = currentStep[key] === getFirstStep(key)\n    })\n    return obj\n  }, [currentStep])\n\n  const isLastStep = useMemo(() => {\n    const obj: Ctx<boolean> = {} as Ctx<boolean>\n    Object.keys(currentStep).forEach((key) => {\n      obj[key] = currentStep[key] === getLastStep(key)\n    })\n    return obj\n  }, [currentStep])\n\n  const _next = (key: string) => setCurrentStep(key, getNextStep(key)!)\n\n  const _prev = (key: string) => setCurrentStep(key, getPrevStep(key)!)\n\n  const _stop = (key: string) => {\n    setVisible(key, false)\n    setCurrentStep(key, undefined)\n  }\n\n  const registerStep = (key: string, step: IStep) => {\n    setSteps((previousSteps) => {\n      const newSteps = { ...previousSteps }\n      newSteps[key] = {\n        ...previousSteps[key],\n        [step.name]: step,\n      }\n      return newSteps\n    })\n    if (!eventEmitter[key]) {\n      eventEmitter[key] = new mitt()\n    }\n  }\n\n  const unregisterStep = (key: string, stepName: string) => {\n    if (!mounted) {\n      return\n    }\n    setSteps((previousSteps) => {\n      const newSteps = { ...previousSteps }\n      newSteps[key] = Object.entries(previousSteps[key] as StepObject)\n        .filter(([key]) => key !== stepName)\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {})\n      return newSteps\n    })\n  }\n\n  const getCurrentStep = (key: string) => currentStep[key]\n\n  const start = async (key: string, fromStep?: number) => {\n    const currentStep = fromStep\n      ? (steps[key] as StepObject)[fromStep]\n      : getFirstStep(key)\n\n    if (startTries.current > MAX_START_TRIES) {\n      startTries.current = 0\n      return\n    }\n    if (!currentStep) {\n      startTries.current += 1\n      requestAnimationFrame(() => start(key, fromStep))\n    } else {\n      eventEmitter[key]?.emit('start')\n      await setCurrentStep(key, currentStep!)\n      setVisible(key, true)\n      startTries.current = 0\n    }\n  }\n  const next = () => _next(tourKey)\n  const prev = () => _prev(tourKey)\n  const stop = () => _stop(tourKey)\n  return (\n    <View style={[styles.container, wrapperStyle]}>\n      <TourGuideContext.Provider\n        value={{\n          eventEmitter,\n          registerStep,\n          unregisterStep,\n          getCurrentStep,\n          start,\n          stop,\n          canStart,\n          setTourKey,\n        }}\n      >\n        {children}\n        <Modal\n          ref={modal}\n          {...{\n            next,\n            prev,\n            stop,\n            visible: visible[tourKey],\n            isFirstStep: isFirstStep[tourKey],\n            isLastStep: isLastStep[tourKey],\n            currentStep: currentStep[tourKey],\n            labels,\n            tooltipComponent,\n            tooltipStyle,\n            androidStatusBarVisible,\n            backdropColor,\n            animationDuration,\n            maskOffset,\n            borderRadius,\n            dismissOnPress,\n            preventOutsideInteraction,\n          }}\n        />\n      </TourGuideContext.Provider>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","import * as React from 'react'\n\nexport const useIsMounted = () => {\n  const isMounted = React.useRef(false)\n  React.useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n  return isMounted\n}\n"],"sourceRoot":""}